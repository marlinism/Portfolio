{"ast":null,"code":"var _jsxFileName = \"/Users/marlin/Desktop/marlinism.github.io/portpolio/src/components/Home/Header/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./Header.css\";\nimport { TOTAL_SCREEN, GET_SCREEN_INDEX } from '../../../utilities/commonUtils';\nimport ScrollService from '../../../utilities/ScrollService';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n  const updateCurrentScreen = currentScreen => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n  let currentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n  const getHeaderOptions = () => {\n    return TOTAL_SCREEN.map((screen, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getHeaderOptionsClass(i),\n      onClick: () => switchScreen(i, screen),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: screen.screen_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)\n    }, screen.screen_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this));\n  };\n  const getHeaderOptionsClass = index => {\n    let classes = \"header-option\";\n    if (index < TOTAL_SCREEN.length - 1) classes += \"header-option-seperator\";\n    if (selectedScreen === index) classes += \"selected-header-option\";\n    return;\n  };\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n    screenComponent.scrollIntoView({\n      behavior: 'smooth'\n    });\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-option\",\n    onClick: () => setShowHeaderOptions(!showHeaderOptions),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-parent\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-hamburger\",\n        onClick: () => setShowHeaderOptions(!showHeaderOptions),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"header-hamburger-bars\",\n          icon: faBars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"q2MbXurkb4Gbb5Hih7vqcPgrBdM=\");\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","TOTAL_SCREEN","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","jsxDEV","_jsxDEV","Header","_s","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","screenInView","screenIndex","currentScreenSubscription","currentScreenBroadCaster","subscribe","getHeaderOptions","map","screen","i","className","getHeaderOptionsClass","onClick","switchScreen","children","screen_name","fileName","_jsxFileName","lineNumber","columnNumber","index","classes","length","screenComponent","document","getElementById","scrollIntoView","behavior","icon","_c","$RefreshReg$"],"sources":["/Users/marlin/Desktop/marlinism.github.io/portpolio/src/components/Home/Header/Header.js"],"sourcesContent":["import React, { useState } from 'react';\nimport \"./Header.css\"\nimport { TOTAL_SCREEN, GET_SCREEN_INDEX } from '../../../utilities/commonUtils';\nimport ScrollService from '../../../utilities/ScrollService';\nimport {faBars} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default function Header() {\n    const [selectedScreen, setSelectedScreen] = useState(0)\n    const [showHeaderOptions, setShowHeaderOptions] = useState(false)\n\n    const updateCurrentScreen = (currentScreen) => {\n        if(!currentScreen || !currentScreen.screenInView)\n        return;\n        let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView)\n        if(screenIndex < 0)\n        return\n    }\n    let currentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen)\n\n    const getHeaderOptions = () => {\n        return (\n            TOTAL_SCREEN.map((screen, i)=> (\n                <div key={screen.screen_name} className={getHeaderOptionsClass(i)}\n                onClick = {() => switchScreen(i, screen)}>\n                    <span>{screen.screen_name}</span>\n                </div>\n            ))\n        )\n    }\n\n    const getHeaderOptionsClass = (index) => {\n        let classes = \"header-option\";\n        if(index < TOTAL_SCREEN.length - 1)\n        classes += \"header-option-seperator\";\n\n        if(selectedScreen === index) \n        classes += \"selected-header-option\";\n        return\n    }\n\n    const switchScreen = (index, screen) => {\n        let screenComponent = document.getElementById(screen.screen_name)\n        if(!screenComponent)\n        return;\n\n        screenComponent.scrollIntoView({behavior: 'smooth'})\n        setSelectedScreen(index);\n        setShowHeaderOptions(false);\n    };\n\n  return (\n    <div className='header-option' onClick={() => setShowHeaderOptions(!showHeaderOptions)}>\n        <div className='header-parent'>\n            <div className='header-hamburger' onClick={() => setShowHeaderOptions(!showHeaderOptions)}>\n                <FontAwesomeIcon className='header-hamburger-bars' icon={faBars}/>\n            </div>\n        </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}